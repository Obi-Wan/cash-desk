/*
 * GuiOptionsHelperDialog.java
 * 
 * Copyright (C) 2009 Nicola Roberto Viganò
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

/*
 * GuiOptionsHelperDialog.java
 *
 * Created on 4-set-2009, 15.08.03
 */

package gestionecassa.clients.cassa.gui;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.util.List;
import java.util.Vector;
import javax.swing.AbstractAction;
import javax.swing.GroupLayout.ParallelGroup;
import javax.swing.GroupLayout.SequentialGroup;
import javax.swing.JComponent;
import javax.swing.JPanel;
import javax.swing.KeyStroke;

/**
 *
 * @author ben
 */
public class GuiOptionsHelperDialog extends javax.swing.JDialog {

    KeyStroke moreKeys[];
    KeyStroke lessKeys[];

    GuiOrderSingleArticleWOptionsPanel targetPanel;

    List<RecordPanelsOfOptions> options;

    /** Creates new form GuiOptionsHelperDialog */
    public GuiOptionsHelperDialog(java.awt.Frame parent,
            GuiOrderSingleArticleWOptionsPanel targetPanel) {
        super(parent, true);
        initComponents();
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);

        this.targetPanel = targetPanel;

        jScrollPaneMain.setBorder(
                javax.swing.BorderFactory.createTitledBorder(
                                                targetPanel.article.getName()));
        jScrollPaneMain.setViewportView(new JPanel());

        initKeysShortcuts();
        buildContentsList();
        buildVisualList();

        jScrollPaneMain.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(
                KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0), "ENTER");
        jScrollPaneMain.getActionMap().put("ENTER", new AbstractAction() {
            public void actionPerformed(ActionEvent e) {
                pressedOk();
            }
        });
        jScrollPaneMain.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(
                KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), "ESC");
        jScrollPaneMain.getActionMap().put("ESC", new AbstractAction() {
            public void actionPerformed(ActionEvent e) {
                pressedCancel();
            }
        });

        packAndCenter();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jScrollPaneMain = new javax.swing.JScrollPane();
    jPanelButtons = new javax.swing.JPanel();
    jButtonOk = new javax.swing.JButton();
    jButtonCancel = new javax.swing.JButton();

    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

    jButtonOk.setText("Ok");
    jButtonOk.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButtonOkActionPerformed(evt);
      }
    });

    jButtonCancel.setText("Cancel");
    jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButtonCancelActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout jPanelButtonsLayout = new javax.swing.GroupLayout(jPanelButtons);
    jPanelButtons.setLayout(jPanelButtonsLayout);
    jPanelButtonsLayout.setHorizontalGroup(
      jPanelButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanelButtonsLayout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jButtonOk)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 390, Short.MAX_VALUE)
        .addComponent(jButtonCancel)
        .addContainerGap())
    );

    jPanelButtonsLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButtonCancel, jButtonOk});

    jPanelButtonsLayout.setVerticalGroup(
      jPanelButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanelButtonsLayout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanelButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jButtonOk)
          .addComponent(jButtonCancel))
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(jPanelButtons, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
      .addComponent(jScrollPaneMain, javax.swing.GroupLayout.DEFAULT_SIZE, 564, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
        .addComponent(jScrollPaneMain, javax.swing.GroupLayout.DEFAULT_SIZE, 448, Short.MAX_VALUE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jPanelButtons, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        pressedCancel();
    }//GEN-LAST:event_jButtonCancelActionPerformed

    private void jButtonOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOkActionPerformed
        pressedOk();
    }//GEN-LAST:event_jButtonOkActionPerformed


  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton jButtonCancel;
  private javax.swing.JButton jButtonOk;
  private javax.swing.JPanel jPanelButtons;
  private javax.swing.JScrollPane jScrollPaneMain;
  // End of variables declaration//GEN-END:variables


    /**
     * Inner class that defines a record of the table of options.
     *
     * @author ben
     */
    class RecordPanelsOfOptions {

        /**
         *
         */
        final String option;

        /**
         *
         */
        final GuiOrderSingleOptionPanel originalPanel;

        /**
         * 
         */
        final GuiHelperSingleOptionPanel dialogPanel;

        /**
         * Explicit constructor
         *
         * @param article
         * @param panel
         */
        public RecordPanelsOfOptions(String option,
                GuiOrderSingleOptionPanel origPanel,
                GuiHelperSingleOptionPanel diagPanel) {
            this.option = option;
            this.originalPanel = origPanel;
            this.dialogPanel = diagPanel;
        }
    }

    /**
     * Popolates the list of the panels related to each article sold.
     */
    private void buildContentsList() {
        options = new Vector<RecordPanelsOfOptions>();
        int i = 0;
        for (String option : targetPanel.article.getOptions()) {
            GuiHelperSingleOptionPanel tempDiagPanel;
            GuiOrderSingleOptionPanel tempOrigPanel = targetPanel.getSingleOptionPanel(option);
            
            tempDiagPanel = new GuiHelperSingleOptionPanel(this, option,
                    (tempOrigPanel == null) ? 0 : tempOrigPanel.getNumParziale(),
                    i
                        );

            options.add(new RecordPanelsOfOptions(option, tempOrigPanel, tempDiagPanel));
            i++;
        }
    }

    /**
     * It actually displays what the method <code>buildContentsList()</code>
     * stored in the table of SoldArticle-"Panel showing it".
     */
    private void buildVisualList() {

        /* Prima di tutto rimuoviamo i pannelli di prima che se no incasinano
         * tutto
         */
        JPanel mainPanel = ((JPanel)jScrollPaneMain.getViewport().getView());
        mainPanel.removeAll();

        /* Creo il nuovo layout in cui organizzerò i nuovi pannelli
         */
        javax.swing.GroupLayout layout =
                new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(layout);

        /* Creo i due gruppi con cui organizzare i pannelli
         */
        ParallelGroup tempHorizGroup = layout.createParallelGroup(
                javax.swing.GroupLayout.Alignment.LEADING);
        SequentialGroup tempSequGroup = layout.createSequentialGroup()
            .addContainerGap();

        /* Ciclo in cui aggiungo i pannelli ai gruppi con le impostazioni giuste
         */
        for (RecordPanelsOfOptions singleRecord : options) {

            tempHorizGroup.addComponent(singleRecord.dialogPanel,
                    javax.swing.GroupLayout.DEFAULT_SIZE,
                    javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE);

            tempSequGroup
                .addComponent(singleRecord.dialogPanel,
                    javax.swing.GroupLayout.PREFERRED_SIZE,
                    javax.swing.GroupLayout.DEFAULT_SIZE,
                    javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(
                    javax.swing.LayoutStyle.ComponentPlacement.RELATED);
        }

        /* Ultimo spazio del gruppo verticale
         */
        tempSequGroup.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE,
                                      Short.MAX_VALUE);

        /* infine aggiungiamo il gruppo di elementi al layout della pagina
         * principale.
         */
        layout.setHorizontalGroup(
          layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tempHorizGroup)
                .addContainerGap() )
        );
        layout.setVerticalGroup(
          layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tempSequGroup)
        );
    }

    /**
     * It assigns the keys for fast selection of chosen articles in this panel
     */
    private void initKeysShortcuts() {
        moreKeys = new KeyStroke[10];
        lessKeys = new KeyStroke[10];

        moreKeys[0] = KeyStroke.getKeyStroke(KeyEvent.VK_1,0);
        moreKeys[1] = KeyStroke.getKeyStroke(KeyEvent.VK_2,0);
        moreKeys[2] = KeyStroke.getKeyStroke(KeyEvent.VK_3,0);
        moreKeys[3] = KeyStroke.getKeyStroke(KeyEvent.VK_4,0);
        moreKeys[4] = KeyStroke.getKeyStroke(KeyEvent.VK_5,0);
        moreKeys[5] = KeyStroke.getKeyStroke(KeyEvent.VK_6,0);
        moreKeys[6] = KeyStroke.getKeyStroke(KeyEvent.VK_7,0);
        moreKeys[7] = KeyStroke.getKeyStroke(KeyEvent.VK_8,0);
        moreKeys[8] = KeyStroke.getKeyStroke(KeyEvent.VK_9,0);
        moreKeys[9] = KeyStroke.getKeyStroke(KeyEvent.VK_0,0);

        lessKeys[0] = KeyStroke.getKeyStroke(KeyEvent.VK_Q,0);
        lessKeys[1] = KeyStroke.getKeyStroke(KeyEvent.VK_W,0);
        lessKeys[2] = KeyStroke.getKeyStroke(KeyEvent.VK_E,0);
        lessKeys[3] = KeyStroke.getKeyStroke(KeyEvent.VK_R,0);
        lessKeys[4] = KeyStroke.getKeyStroke(KeyEvent.VK_T,0);
        lessKeys[5] = KeyStroke.getKeyStroke(KeyEvent.VK_Y,0);
        lessKeys[6] = KeyStroke.getKeyStroke(KeyEvent.VK_U,0);
        lessKeys[7] = KeyStroke.getKeyStroke(KeyEvent.VK_I,0);
        lessKeys[8] = KeyStroke.getKeyStroke(KeyEvent.VK_O,0);
        lessKeys[9] = KeyStroke.getKeyStroke(KeyEvent.VK_P,0);
    }
    
    private void pressedOk() {
        for (RecordPanelsOfOptions record : options) {
            if (record.dialogPanel.spinnerModel.getValue().equals(
                    record.dialogPanel.spinnerModel.getMinimum())) {
                if (record.originalPanel != null) {
                    targetPanel.removeOptionPanel(record.originalPanel);
                }
            } else {
                if (record.originalPanel == null) {
                    targetPanel.addNewOptionPanel(record.option,
                            record.dialogPanel.getNumTot());
                } else {
                    record.originalPanel.spinnerModel.setValue(
                            record.dialogPanel.spinnerModel.getValue());
                }
            }
        }
        this.dispose();
    }

    private void pressedCancel() {
        this.dispose();
    }
    
    /**
     *
     */
    protected void packAndCenter() {
        this.pack();
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        Dimension frameSize = this.getSize();
        if (frameSize.height > screenSize.height) {
            frameSize.height = screenSize.height;
        }
        if (frameSize.width > screenSize.width) {
            frameSize.width = screenSize.width;
        }
        this.setSize(frameSize);
        this.setLocation((screenSize.width - frameSize.width) / 2, (screenSize.height - frameSize.height) / 2);
    }
}
